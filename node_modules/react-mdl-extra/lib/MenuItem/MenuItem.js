'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _keycodes = require('../keycodes');

var _keycodes2 = _interopRequireDefault(_keycodes);

require('./MenuItem.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MenuItem = function (_Component) {
  _inherits(MenuItem, _Component);

  function MenuItem() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, MenuItem);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = MenuItem.__proto__ || Object.getPrototypeOf(MenuItem)).call.apply(_ref, [this].concat(args))), _this), _this.onClick = function () {
      var _this$props = _this.props,
          closeMenu = _this$props.closeMenu,
          onClick = _this$props.onClick;

      if (onClick) onClick(_this.props);
      closeMenu();
    }, _this.onKeyDown = function (e) {
      if (e.keyCode === _keycodes2.default.UP || e.keyCode === _keycodes2.default.DOWN) {
        var node = (0, _reactDom.findDOMNode)(_this);
        var children = node.parentNode.children;
        var i = [].indexOf.call(children, node);
        var len = children.length;
        var next = e.keyCode === _keycodes2.default.DOWN ? (i + 1) % len : (i + len - 1) % len;
        e.stopPropagation();
        e.preventDefault();
        children[next].focus();
      } else if (e.keyCode === _keycodes2.default.ENTER || e.keyCode === _keycodes2.default.SPACE) {
        e.stopPropagation();
        e.preventDefault();
        _this.onClick();
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(MenuItem, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          className = _props.className,
          tabIndex = _props.tabIndex;

      var itemClass = (0, _classnames2.default)('mdl-portalmenu__item', className);
      return _react2.default.createElement(
        'li',
        { className: itemClass, tabIndex: tabIndex, onClick: this.onClick, onKeyDown: this.onKeyDown },
        children
      );
    }
  }]);

  return MenuItem;
}(_react.Component);

MenuItem.propTypes = {
  children: _react.PropTypes.any.isRequired,
  className: _react.PropTypes.string,
  closeMenu: _react.PropTypes.func,
  onClick: _react.PropTypes.func,
  tabIndex: _react.PropTypes.number
};
exports.default = MenuItem;